class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    # Inserir no final
    def insert_at_end(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            temp = self.head
            while temp.next:
                temp = temp.next
            temp.next = new_node

    # Remover no início
    def remove_at_start(self):
        if self.head is None:
            return
        temp = self.head
        self.head = self.head.next
        del temp

    # Remover no fim
    def remove_at_end(self):
        if self.head is None:
            return
        temp = self.head
        prev = None
        while temp.next:
            prev = temp
            temp = temp.next
        if prev is None:
            self.head = None
        else:
            prev.next = None
        del temp

    # Remover em uma posição específica
    def remove_at_position(self, position):
        if self.head is None:
            return
        temp = self.head
        prev = None
        count = 0
        while temp and count < position:
            prev = temp
            temp = temp.next
            count += 1
        if temp is None:
            return
        if prev is None:
            self.head = temp.next
        else:
            prev.next = temp.next
        del temp

    # Imprimir lista
    def print_list(self):
        temp = self.head
        while temp:
            print(temp.data, end=" ")
            temp = temp.next
        print()

    # Imprimir lista reserva
    def print_reserve_list(self):
        temp = self.head
        reserve_list = []
        while temp:
            reserve_list.append(temp.data)
            temp = temp.next
        print(" ".join(map(str, reserve_list[::-1])))

ll = LinkedList()
ll.insert_at_end(1)
ll.insert_at_end(2)
ll.insert_at_end(3)
ll.insert_at_end(4)
ll.insert_at_end(5)

print("Lista original: ")
ll.print_list()

ll.remove_at_start()
print("Lista após remover no início: ")
ll.print_list()

ll.remove_at_end()
print("Lista após remover no fim:")
ll.print_list()

ll.remove_at_position(1)
print("Lista após remover na posição 1: ")
ll.print_list()

print("Lista reserva: ")
ll.print_reserve_list()
